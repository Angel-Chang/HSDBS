"""
Django settings for testing project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import logging
import datetime as dt

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0)=g0kcd0wuagva79a!b)y6wa69xmals@e7@ec7^o^0&u9r2^&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

LOGIN_URL = '/accounts/login/'

#LOGOUT_REDIRECT_URL = '/accounts/login/'

# Used for python manage.py collectstatic to allow all static files copied into STATIC_ROOT folder 
#STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# Server path to store files in the computer
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
# Reference URL for browser to access the files over Http.
MEDIA_URL='/media/'

LOCALE_PATHS = [
    os.path.join(BASE_DIR, "locale"),
]

# Application definition

INSTALLED_APPS = [
    # Apps from django 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    # DRF
    'rest_framework',
    # Apps related to project
    'gamecore.apps.GamecoreConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    #'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'happycity.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Custom template for admin
        'DIRS': [os.path.join(BASE_DIR, 'templates')], 
        #'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #'django.template.context_processors.i18n',
            ],
        },
    },
]

WSGI_APPLICATION = 'happycity.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASE_ROUTERS = ['gamecore.models.DBRouter']
DATABASE_APPS_MAPPING = {'player_data':'gameserver'}

DATABASES = {
    "default": 
    {
		"ENGINE": "django.db.backends.mysql",
  
        # for 雀喜麻將
        #"HOST": "localhost",
        #"NAME": 'happycity',
        #"USER": "root",
        #"PASSWORD": "CaXN9EfV",
        
        # for Azure VM 
        #"HOST": "localhost",
        #"NAME": 'dragoncomeMJ',
        #"USER": "dragoncomeDBA",
        #"PASSWORD": "!@#$rfvCDE%^&*",
        
        # for pythonanywhere db address
        #"HOST": "leothenerd.mysql.pythonanywhere-services.com",
        #"NAME": 'leothenerd$happycity',
        #"USER": "leothenerd",
        #"PASSWORD": "san8useTakosan!",
        
        # for local database 
        "HOST": "127.0.0.1",
        "NAME": 'dragoncomeMJ',
        #"USER": "root",
        #"PASSWORD": "$$dualwings.Angel21$$",
        "USER": "dragoncomeDBA",
        "PASSWORD": "!@#$rfvCDE%^&*",        
        #
        "PORT": "",
        'OPTIONS': {
            'charset': 'utf8mb4'  # This is the important line
        },
	},
    "gameserver": 
    {
		"ENGINE": "django.db.backends.mysql",
  
        # for game server
        "HOST": "127.0.0.1",
        "NAME": 'godgamemj',
        "USER": "godgameuser",
        "PASSWORD": "1qaz2WSX"
	}    

}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    #    'rest_framework.authentication.BasicAuthentication',
        #'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'
#LANGUAGE_CODE = 'zh-hant'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = False

# This will cause datetime queryset comparsion calculated in wrong result 
# Check this link for further information
# https://stackoverflow.com/questions/21918802/problems-filtering-django-datetime-field-by-month-and-day
#USE_TZ = False

# Allow all
CORS_ORIGIN_ALLOW_ALL = True

# 瀏覽器關閉後，session 立即失效
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

DATE_FORMAT = '%Y/%m/%d'
DATE_FORMAT1 = '%Y-%m-%d'
DATETIME_FORMAT = '%Y-%m-%d %H:%M:%S'

# 小數點兩位，有千分號
AMOUNT_FORMAT = "#,##0.00"
# 無小數點，有千分號
GOLD_FORMAT = "#,##0"

#format(123456789,',')
#'123,456,789'

#format(123456789.777,',')
#'123,456,789.777'

# Email 模組
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# for test 
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'huichi.chang@gmail.com'
EMAIL_HOST_PASSWORD = '$$dualwings.Angel21$$'

class MyFormatter(logging.Formatter):
    converter=dt.datetime.fromtimestamp
    def formatTime(self, record, datefmt=None):
        ct = self.converter(record.created)
        if datefmt:
            s = ct.strftime(datefmt)
        else:
            t = ct.strftime("%Y-%m-%d %H:%M:%S")
            s = "%s.%03d" % (t, record.msecs)
        return s

 # 基礎設定
logging.basicConfig(level=logging.WARNING,
                    format='[%(levelname)-8s] %(asctime)s | %(name)s:%(lineno)d | %(message)s',
                    # datefmt='%Y-%m-%d %H:%M:%S',
                    handlers = [logging.FileHandler('server.log', 'a', 'utf-8'),])
 
# 定義 handler 輸出 sys.stderr
console = logging.StreamHandler()
console.setLevel(logging.DEBUG)
# 設定輸出格式
formatter = MyFormatter('[%(asctime)s]%(name)-12s: %(levelname)-8s %(message)s')
# handler 設定輸出格式
console.setFormatter(formatter)
# 加入 hander 到 root logger
logging.getLogger('').addHandler(console)

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'normal': {
#             'format': '[%(levelname)s] %(asctime)s | %(name)s:%(lineno)d | %(message)s'
#             datefmt='%Y-%m-%d %H:%M:%S'
#         },
#         'simple': {
#             'format': '[%(levelname)s] %(message)s'
#         },
#     },    
#     'handlers': {
#         'file': {
#             'level':'DEBUG',
#             'class': 'logging.FileHandler',
#             'formatter': 'normal',  # use the above "normal" formatter
#             'filename': '/path/to/django/debug.log',
#         },
#     },
#     'loggers': {
#         'server': {  # space means "root logger"
#             'handlers': ['file'],  # use the above "console" handler
#             'level': 'DEBUG',  # logging level
#         },
#     },
# }